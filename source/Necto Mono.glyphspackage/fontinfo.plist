{
.appVersion = "3217";
copyright = "Â© 2023, Marco Condello & Collletttivo";
customParameters = (
{
name = "Use Typo Metrics";
value = 1;
},
{
name = fsType;
value = (
);
},
{
name = unicodeRanges;
value = (
0,
1,
2
);
},
{
name = "Disable Last Change";
value = 1;
},
{
name = "Write DisplayStrings";
value = 0;
},
{
name = license;
value = "SIL OpenFont License";
},
{
name = licenseURL;
value = "https://scripts.sil.org/OFL_web";
},
{
name = vendorID;
value = CLT;
}
);
date = "2016-06-30 19:50:15 +0000";
designer = "Marco Condello";
familyName = "Necto Mono";
featurePrefixes = (
{
code = "languagesystem DFLT dflt;\012languagesystem latn dflt;\012languagesystem latn CAT;\012languagesystem latn ROM;\012languagesystem latn MOL;\012languagesystem latn KAZ;\012languagesystem latn TAT;\012languagesystem latn TRK;\012languagesystem latn CRT;\012languagesystem latn AZE;\012languagesystem latn NLD;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;\012feature subs;\012feature sinf;\012feature sups;\012feature numr;\012feature dnom;\012feature frac;\012feature ordn;\012feature case;\012feature ss01;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {\012	@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb commaturnedabovecomb dieresiscomb dotaccentcomb gravecomb hungarumlautcomb macroncomb ringcomb tildecomb];\012	lookupflag UseMarkFilteringSet @CombiningTopAccents;\012	sub i' @CombiningTopAccents by idotless;\012	sub j' @CombiningTopAccents by jdotless;\012} ccmp_Other_1;\012\012lookup ccmp_latn_1 {\012	sub fi by f i;\012	sub fl by f l;\012} ccmp_latn_1;\012\012script latn;\012lookup ccmp_latn_1;\012";
name = ccmp;
},
{
automatic = 1;
code = "script latn;\012language AZE;\012lookup locl_latn_0 {\012	sub i by idotaccent;\012} locl_latn_0;\012language CRT;\012lookup locl_latn_0;\012language KAZ;\012lookup locl_latn_0;\012language TAT;\012lookup locl_latn_0;\012language TRK;\012lookup locl_latn_0;\012\012script latn;\012language ROM;\012lookup locl_latn_1 {\012	sub Scedilla by Scommaaccent;\012	sub scedilla by scommaaccent;\012	sub Tcedilla by Tcommaaccent;\012	sub tcedilla by tcommaaccent;\012} locl_latn_1;\012language MOL;\012lookup locl_latn_1;\012\012script latn;\012language CAT;\012lookup locl_latn_2 {\012	sub l periodcentered l by l_periodcentered_l.loclCAT;\012	sub L periodcentered L by L_periodcentered_L.loclCAT;\012} locl_latn_2;\012\012script latn;\012language NLD;\012lookup locl_latn_3 {\012	sub iacute j' by jacute;\012	sub Iacute J' by Jacute;\012} locl_latn_3;\012";
name = locl;
},
{
automatic = 1;
code = "sub zero by zeroinferior;\012sub one by oneinferior;\012sub two by twoinferior;\012sub three by threeinferior;\012sub four by fourinferior;\012sub five by fiveinferior;\012sub six by sixinferior;\012sub seven by seveninferior;\012sub eight by eightinferior;\012sub nine by nineinferior;\012sub period by periodinferior;\012sub parenleft by parenleftinferior;\012sub parenright by parenrightinferior;\012";
name = subs;
},
{
automatic = 1;
code = "sub zero by zeroinferior;\012sub one by oneinferior;\012sub two by twoinferior;\012sub three by threeinferior;\012sub four by fourinferior;\012sub five by fiveinferior;\012sub six by sixinferior;\012sub seven by seveninferior;\012sub eight by eightinferior;\012sub nine by nineinferior;\012sub period by periodinferior;\012sub parenleft by parenleftinferior;\012sub parenright by parenrightinferior;\012";
name = sinf;
},
{
automatic = 1;
code = "sub zero by zerosuperior;\012sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012sub four by foursuperior;\012sub five by fivesuperior;\012sub six by sixsuperior;\012sub seven by sevensuperior;\012sub eight by eightsuperior;\012sub nine by ninesuperior;\012sub period by periodsuperior;\012sub parenleft by parenleftsuperior;\012sub parenright by parenrightsuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub zero by zero.numr;\012sub one by one.numr;\012sub two by two.numr;\012sub three by three.numr;\012sub four by four.numr;\012sub five by five.numr;\012sub six by six.numr;\012sub seven by seven.numr;\012sub eight by eight.numr;\012sub nine by nine.numr;\012";
name = numr;
},
{
automatic = 1;
code = "sub zero by zero.dnom;\012sub one by one.dnom;\012sub two by two.dnom;\012sub three by three.dnom;\012sub four by four.dnom;\012sub five by five.dnom;\012sub six by six.dnom;\012sub seven by seven.dnom;\012sub eight by eight.dnom;\012sub nine by nine.dnom;\012";
name = dnom;
},
{
automatic = 1;
code = "lookup FRAC {\012	sub slash by fraction;\012} FRAC;\012lookup UP {\012	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];\012} UP;\012lookup DOWN {\012	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];\012	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];\012} DOWN;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012";
name = ordn;
},
{
automatic = 1;
code = "sub bullet by bullet.case;\012sub parenleft by parenleft.case;\012sub parenright by parenright.case;\012sub braceleft by braceleft.case;\012sub braceright by braceright.case;\012sub bracketleft by bracketleft.case;\012sub bracketright by bracketright.case;\012sub plus by plus.case;\012sub minus by minus.case;\012sub multiply by multiply.case;\012sub divide by divide.case;\012sub equal by equal.case;\012sub notequal by notequal.case;\012sub greater by greater.case;\012sub less by less.case;\012sub greaterequal by greaterequal.case;\012sub lessequal by lessequal.case;\012sub plusminus by plusminus.case;\012sub approxequal by approxequal.case;\012sub asciitilde by asciitilde.case;\012sub logicalnot by logicalnot.case;\012sub infinity by infinity.case;\012sub emptyset by emptyset.case;\012";
name = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;\012sub f i by f_i;\012sub f l by f_l;\012";
name = liga;
},
{
automatic = 1;
code = "sub a by a.ss01;\012sub aacute by aacute.ss01;\012sub abreve by abreve.ss01;\012sub acircumflex by acircumflex.ss01;\012sub adieresis by adieresis.ss01;\012sub agrave by agrave.ss01;\012sub amacron by amacron.ss01;\012sub aogonek by aogonek.ss01;\012sub aring by aring.ss01;\012sub atilde by atilde.ss01;\012sub g by g.ss01;\012sub gbreve by gbreve.ss01;\012sub gcommaaccent by gcommaaccent.ss01;\012sub gdotaccent by gdotaccent.ss01;\012";
name = ss01;
}
);
fontMaster = (
{
alignmentZones = (
"{700, 10}",
"{470, 10}",
"{0, -10}",
"{-230, -10}"
);
ascender = 750;
capHeight = 700;
customParameters = (
{
name = hheaAscender;
value = 970;
},
{
name = hheaDescender;
value = -270;
},
{
name = hheaLineGap;
value = 60;
},
{
name = winAscent;
value = 970;
},
{
name = winDescent;
value = 400;
},
{
name = typoAscender;
value = 970;
},
{
name = typoDescender;
value = -270;
},
{
name = typoLineGap;
value = 60;
}
);
descender = -230;
guideLines = (
{
position = "{289, 6}";
},
{
position = "{173, 608}";
},
{
position = "{439, 705}";
},
{
position = "{374, 393}";
},
{
position = "{68, 604}";
},
{
position = "{347, 678}";
},
{
position = "{232, 397}";
}
);
horizontalStems = (
75
);
id = "B33A6296-7F33-4AA4-95A6-15EAB02AACC1";
userData = {
GSOffsetHorizontal = 11;
GSOffsetVertical = 11;
};
verticalStems = (
82
);
visible = 1;
xHeight = 470;
}
);
instances = (
{
instanceInterpolations = {
"B33A6296-7F33-4AA4-95A6-15EAB02AACC1" = 1;
};
name = Regular;
}
);
kerning = {
"B33A6296-7F33-4AA4-95A6-15EAB02AACC1" = {
"@MMK_L_zero.numr" = {
"@MMK_R_zero.numr" = 0;
};
zero.numr = {
fraction = 0;
};
};
};
manufacturer = Collletttivo;
manufacturerURL = "https://www.collletttivo.it";
unitsPerEm = 1000;
userData = {
GSDimensionPlugin.Dimensions = {
"B33A6296-7F33-4AA4-95A6-15EAB02AACC1" = {
HH = "77";
HV = "85";
OH = "77";
OV = "85";
nV = "83";
nd = "75";
oH = "75";
oV = "83";
tH = "75";
};
};
};
versionMajor = 1;
versionMinor = 300;
}
